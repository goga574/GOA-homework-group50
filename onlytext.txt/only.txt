პიტონი  .

variable name -ცვლადის სახელი
concatination - კონკატინაცია - სტრინგების შეერთება
დეკლარირება - შექმნა
integer - int - მთლი რიცხვები
float - ათწილადი რიცხვები
string - str - ბრჭყალებში მოქცეული ტექსტი
list -სია
data type - მონაცემთ ტიპი
case sensitive language - ქეის სენსიტიური ენა -დიდი მნიშვნელობა აქვს დიდ და პატარა ასოებს
debugging - კოდის ერორებისგან გაწმენდა
line by line - ხაზ-ხაზ
alt = alternative
input - შეყვანა / შეტანა
output - გამოტანა / გამოყვანა
dot notation-წერტილოვანი ფუნქცია
---------------------------------------------
comparison operators - მიმნიჭებელი ოპერატორი
= მიმნიჭებელი ოპერატორი
== შედარების ოპერატორი
True - ჭეშმარიტი
False - მცდარი
> - მეტობის ნიშანი / ოპერატორი
< - ნაკლებობის ნიშანი / ოპერატორი
>= - მეტია ან ტოლია 
<= - ნაკლებია ან ტოლია
---------------------------------------
if - პირობითი ოპერატორი

elif

else
------------------------
loop -ერთი და იგივე რაღაცის ბევრჯერ გამეორება
----------------------
uechveli eseti struqtura aqvs
i = 0
while - სანამ /როდესაც
while i < ...:
...
...
...
i += 1
----------------
condition - პირობა
-----------------------------
iteration -იტერაცია -განმეორება
-----------------
for i in range()
------------------
ჯამი თუ გვინდა ცვლადი იქმნება უეჭველი
---------------------
i = საიტერაციო ცვლადი

i -ს ნაცვლად რაც გვინდა იმას ვწერთ მაგრამ აუცილებელია დავწეროთ i
-----------------------------------
ეს ისე რო ვიცოდეთ - პროგრამირებაში თვლა იწყება 0 დან


=======================================================================================================================
=======================================================================================================================

list:
--------------------------------
name = [ "giorgi", "lasha",25,"beqa"]
index - რიცხვი - მიმდევრობა
print(name[3]) გამოიტანს მესამე ელემენტს სიიდან 


---------------------------------

slicing - შეგვიძლია სიიდან რამდენიმე ელემენტის გამოტანა       / არ მუშაობს int ებზე

print(name[1:3:2]) გამოიტანს ერთიდან სამამდე ყველა ელემენტს ორის დაშორებით [ : : ] პირველი სივრცე არის საიდან მეორე სადამდე და მესამე რამდენით
name = [ "giorgi", "lasha",25,"beqa"]

-------------------------------
len - lenght - სიგრძე         / არ მუშაობს რიცხვებზე უნდა გავასტრინგოთ     /დათვლა იწყება ერთიდან ადამიანურად
   
num = [ 40, 13,25,45]
print(len(num))
----------------------------------------------------------------

append - დაამატოს სიაში რაიმე ელემენტი //   ელემენტს ამატებს სიის ბოლოში ყოველთვის//                                              ასეთ ფუნქციას რომელსაც წერტილით ვამატებთ ქვია -dot notation

num = [ 40, 13,25,45]
num.append(რაც გვინდა რომ გადავცეთ)
print(num) დაპრინტავს დამატებულ ელემენტიანად



//////////////////////////////////////

insert - შეგვიძლია დავამატოთ ნებისმიერი ელემენტი ნებისმიერ ინდექსზე გავს /append ს

print(1, "jemala) დაემატება ჯემალა პირველ ინდექსზე

num.insert(3, "lika") - დაემატება ლიკა სიაშიმესამე ინდექსზე
------------------------------------------------------
remove - ამოშლა ანუ ლისტიდან რომელიმე ელემენტის ამოშლა აქ იწერება პირდაპირ ელემენტის დასახელება
name = [ "giorgi", "lasha",25,"beqa"]

name.remove(giorgi) ამოიშლება giorgi



pop იგივეა რაც remove მაგრამ აქ იწერება indexის ნომეი ანუ თ მერამდენე ელემენტის ამოშლა გვსურს
name = [ "giorgi", "lasha",25,"beqa"]
name.pop(3) ამოიშლება beqa


----------------------------------------------------------
name = [ "giorgi", "lasha",25,"beqa"]

index - დაგვიბრუნებს თუ რომელ ინდექსე დგას კონკრეტული ელემენტი
name.index("beqa")
print(index.name("beqa))


--------------------------------------------------------------
num = [1 ,2 ,3 ,4, 5]

num2 = [ 6, 7, 8, 9]

extend - შეგვიძია სიების გაერთიანება

num.extend(num2) - პირველში გადავა მეორე და გაერთიანდება

თუ ერთ ცვლადი გვაქვს რომელიც სიას შეიცავს და გვინდა ამ სიაში რაიმეს დამატება და გაერთანება უნდა გადავცეთ სიის სახით

num.extend(["giorgi, 25 , "beqa"]) დაემატება ეს ელემენტები ანუ გაერთიანდება ცვლადთან


----------------------------------------------------------------------------
count - შეგვიძლია დავითვალოთ ჩვენს ლისტში რამდენი ერთნაირი ელემენტია














============================================================================================
============================================================================================
============================================================================================
HTML  . invented by tim berners lee
blocklevel elements - იკავებს საიტის მთელს სიგანეს
inline elements - იკავებს იმდენ სივრცეს რამდენიც მათ სჭირდებათ
semantikuri tegi არის ისეთი თეგი რომლის სახელიც განმარტავს მის შინაარსს

inheritance- მემკვიდრეობა / მშობელი თეგები და შვილობილი თეგები

---------------------------------------
blocklevel elements - იკავებს საიტის მთელს სიგანეს
inline elements - იკავებს იმდენ სივრცეს რამდენიც მათ სჭირდებათ
semantikuri tegi არის ისეთი თეგი რომლის სახელიც განმარტავს მის შინაარსს

inheritance- მემკვიდრეობა / მშობელი თეგები და შვილობილი თეგები
inheritance- მემკვიდრეობა / მშობელი თეგები და შვილობილი თეგებირაც უფრო გამართულია კოდი მით მეტი შანსია რომ იგი ბრაუზეში პირველი იყოს

seo - search engine optimization - საძიებო სისტემის ოპტიმიზაცია


simple page application - ერთ გვერდიანი  აპლიკაცია

multiple page application - მრავალ გვერდიანი აპლიკაცია
-----------------------------------
website შედგება სამი ნაწილისაგან 


header


main ----   mainში ასევე არის

section
article
aside


footer
==============================================

inline css=როდესაც html ის თეგშ ვწერთ ცსს ის კოდის

internal css=როდესაც head თგში ვქმნით style თგს და მასში ვწერთ css კოდის
external csc=როდესაც ცალკე ფაილშ ვწერთ css კოდს,ამ დროს html ფაილი უნდა დავუკავშიროთ css ფაილს html ში <link rel="stylesheet"
href=""> თეგის შექმნით
========================
