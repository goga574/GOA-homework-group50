// // ეს არის json ტიპის ობიექტი(გადასაგზავნად და მისაღებად რადგან მთლიანად არის სტრინგი და მოცულობითაც შედარებით მხირე რაოდენობის არის)

// let JSONObject = {
//     "name" : "gabriel",
//     "surname" : "molodini"
// }


// // ეს არის ჩვეულებრივი ობიექტი


// let obj = {
//     name : "goga",
//     surname : "chalauri"
// }



// AJAX არის შემოკლებული ფორმა Asynchronous Java Script And XML (ამის მაგალითი რომ მოვიყვანოთ მაგალითად მაქვს ვებსაიტი და ეს ვებსაიტი გავუშვი,მაგრამ რატომღაც ჩემს ვებსაიტზე კონკრეტული ელემენტის ჩატვირთვა დაგვიანდა,მაგრამ მოგვიანებით ჩაიტვირთა, AJAX კი ნებას გვრთავს რომ მთლიანი ფეიჯი ამ ერთ ელემენტის გამო რომელმაც ჩატვირთვა დააგვიანა მთლიანი ვები თაივდან ჩაიტვირთოს) საბოლოო ახსნა:საშვალებას აძლევს ვებსაიტს რომ სერვერიდან ინფორმაცია წამოიღოს გვერდის თავიდან ჩატვირთვის გარეშე




// XMLHttpRequest - ბრაუზერში ჩაშენებული ობიექტი რომელიც გზავნის მოთხოვნას ბექენდის სერვერთან 





// readyState  property --> ინახავს სტატუსს(მდგომარეობას),ანუ თუ რა მდგომარეობაშია

// ეს სტატუსებია -->

// UNSENT - ეს იმას ნიშნავს რომ მოთხოვნა შექმნილია მაგრამ open() ფუნქცია არ გამოუძახებიათ , აღინიშნაება 0 ით

//  OPENED - ეს ნიშნავს რომ open() ფუნქცია გამოძახებულია და ეს მდგომარეობა აღინიშნება როგორც 1 ით

//  HARDEST RECIEVED ნიშნავს რომ send() ფუნქცია გამოიძახეს და აღინიშნება როგორც 2 ით

// LOADING ნიშნავს რპმ მოთხოვნა პროგრესშია(იტვირთება) და ეს აღინიშნება როგორც 3 ით

// DONE ნიშნავს რომ მოთხოვნა შესრულებულია და პასუხი მზადაა , აღინიშნება როგორც 4 ით


// onreadystatrchange property --> განსაზღვრავს ფუნქციის შესრულებას სანამ readystate შეიცვლება      





let getDataFromBackend = () => {
    let http = new XMLHttpRequest()
    http.onreadystatechange = function(){
        
        if(this.readyState == 4){
            if(this.status == 200){
                let response = JSON.parse(this.responseText)
                response.map((item)=>{
                    console.log()
                })
            }
            console.log(this.readyState)
        }

    }
    http.open("GET", "https://jsonplaceholder.typicode.com/todos")
    http.send()
    

}

getDataFromBackend()














































































































































































































































































































































